<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shirokumacafe.archetype.repository.MessageMapper">
    <resultMap id="BaseResultMap" type="com.shirokumacafe.archetype.entity.Message">
        <id column="msg_id" property="msgId" jdbcType="INTEGER"/>
        <result column="msg_pid" property="msgPid" jdbcType="INTEGER"/>
        <result column="msg_content" property="msgContent" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="c_id" property="cId" jdbcType="INTEGER"/>
        <result column="oper_role" property="operRole" jdbcType="INTEGER"/>
        <result column="oper_id" property="operId" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
    msg_id, msg_pid, msg_content, create_time, c_id, oper_role, oper_id
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from t_message
        where msg_id = #{msgId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_message
    where msg_id = #{msgId,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.shirokumacafe.archetype.entity.Message">
    insert into t_message (msg_id, msg_pid, msg_content,
      create_time, c_id, oper_role,
      oper_id)
    values (#{msgId,jdbcType=INTEGER}, #{msgPid,jdbcType=INTEGER}, #{msgContent,jdbcType=VARCHAR},
      #{createTime,jdbcType=TIMESTAMP}, #{cId,jdbcType=INTEGER}, #{operRole,jdbcType=INTEGER},
      #{operId,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="msgId"
            parameterType="com.shirokumacafe.archetype.entity.Message">
        insert into t_message
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="msgId != null">
                msg_id,
            </if>
            <if test="msgPid != null">
                msg_pid,
            </if>
            <if test="msgContent != null">
                msg_content,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="cId != null">
                c_id,
            </if>
            <if test="operRole != null">
                oper_role,
            </if>
            <if test="operId != null">
                oper_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="msgId != null">
                #{msgId,jdbcType=INTEGER},
            </if>
            <if test="msgPid != null">
                #{msgPid,jdbcType=INTEGER},
            </if>
            <if test="msgContent != null">
                #{msgContent,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="cId != null">
                #{cId,jdbcType=INTEGER},
            </if>
            <if test="operRole != null">
                #{operRole,jdbcType=INTEGER},
            </if>
            <if test="operId != null">
                #{operId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.shirokumacafe.archetype.entity.Message">
        update t_message
        <set>
            <if test="msgPid != null">
                msg_pid = #{msgPid,jdbcType=INTEGER},
            </if>
            <if test="msgContent != null">
                msg_content = #{msgContent,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="cId != null">
                c_id = #{cId,jdbcType=INTEGER},
            </if>
            <if test="operRole != null">
                oper_role = #{operRole,jdbcType=INTEGER},
            </if>
            <if test="operId != null">
                oper_id = #{operId,jdbcType=INTEGER},
            </if>
        </set>
        where msg_id = #{msgId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.shirokumacafe.archetype.entity.Message">
    update t_message
    set msg_pid = #{msgPid,jdbcType=INTEGER},
      msg_content = #{msgContent,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      c_id = #{cId,jdbcType=INTEGER},
      oper_role = #{operRole,jdbcType=INTEGER},
      oper_id = #{operId,jdbcType=INTEGER}
    where msg_id = #{msgId,jdbcType=INTEGER}
  </update>

    <select id="selectMessageExtByParams" resultType="com.shirokumacafe.archetype.entity.MessageExt">
        select t1.msg_id as msgId,t1.msg_pid as msgPid,t1.msg_content as msgContent,
        t1.create_time as createTime,t1.c_id as cId,t1.oper_role as operRole,t1.oper_id as operId,
        CASE t1.oper_role
        WHEN 2 THEN t2.nick_name
        WHEN 1 THEN t3.s_name
        END as operName,
        CASE t1.oper_role
        WHEN 2 THEN '教师'
        WHEN 1 THEN '学生'
        END as operRoleName,
        CASE t1.oper_role
        WHEN 2 THEN t2.chat_head_addr
        WHEN 1 THEN t3.chat_head_addr
        END as chatHeadAddr
        from t_message t1
        LEFT JOIN t_user t2 on t1.oper_id=t2.user_id
        LEFT JOIN t_student t3 on t1.oper_id=t3.s_id
        <where>
            <if test="cId!=null">
                and t1.c_id=#{cId}
            </if>
            <if test="msgPid!=null">
                and t1.msg_pid=#{msgPid}
            </if>
        </where>
        order by t1.create_time desc
    </select>

    <select id="selectMyInfoMessageExtByParams" resultType="com.shirokumacafe.archetype.entity.MessageExt">
        select
        t1.msg_id as msgId,t1.msg_pid as msgPid,t1.msg_content as msgContent,
        t1.create_time as createTime,t1.c_id as cId,t1.oper_role as operRole,t1.oper_id as operId,
        CASE t1.oper_role
        WHEN 2 THEN t2.nick_name
        WHEN 1 THEN t3.s_name
        END as operName,
        CASE t1.oper_role
        WHEN 2 THEN '教师'
        WHEN 1 THEN '学生'
        END as operRoleName,
		CASE t1.oper_role
        WHEN 2 THEN t2.chat_head_addr
        WHEN 1 THEN t3.chat_head_addr
        END as chatHeadAddr
        from (
        select a.* from t_message a where a.msg_pid in(select m.msg_id from t_message m where m.oper_role = #{operRole} and m.oper_id=#{operId})
        and ((a.oper_role = 1 and a.oper_id!=#{operId}) OR (a.oper_role=2 and a.oper_id!=#{operId}))
        ) t1
        LEFT JOIN t_user t2 on t1.oper_id=t2.user_id
        LEFT JOIN t_student t3 on t1.oper_id=t3.s_id
        order by t1.create_time desc
    </select>

</mapper>